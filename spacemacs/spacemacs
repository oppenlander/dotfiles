;; -*- mode: dotspacemacs -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

(defun dotspacemacs/layers ()
  "Configuration Layers declaration."
  (setq-default
   ;; List of additional paths where to look for configuration layers.
   ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '()
   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-configuration-layers '(
                                       javascript
                                       oppenlander
                                       html
                                       git
                                       fasd
                                       company-mode
                                       colors
                                       (clojure :variables
                                                clojure-enable-fancify-symbols nil)
                                       go
                                       lua
                                       markdown
                                       finance
                                       c-c++
                                       (evil-snipe :variables
                                                   evil-snipe-enable-alternate-f-and-t-behaviors nil)
                                       )
   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '()
   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
    "Initialization function.
This function is called at the very startup of Spacemacs initialization
before layers configuration."
    ;; This setq-default sexp is an exhaustive list of all the supported
    ;; spacemacs settings.
    (setq-default
     ;; Specify the startup banner. If the value is an integer then the   ;; banner with the corresponding index is used, if the value is `random'
     ;; then the banner is chosen randomly among the available banners, if
     ;; the value is nil then no banner is displayed.
     dotspacemacs-startup-banner 'random   ;; List of themes, the first of the list is loaded when spacemacs starts.
     ;; Press <SPC> T n to cycle to the next theme in the list (works great
     ;; with 2 themes variants, one dark and one light)
     dotspacemacs-themes '(zenburn)
     ;; If non nil the cursor color matches the state color.
     dotspacemacs-colorize-cursor-according-to-state t
     ;; Default font. `powerline-scale' allows to quickly tweak the mode-line   ;; size to make separators look not too crappy.
     dotspacemacs-default-font '("Source Code Pro"
                                 :size 13
                                 :weight normal
                                 :width normal
                                 :powerline-scale 1.1)
     ;; The leader key-binding   dotspacemacs-leader-key "SPC"
     ;; Major mode leader key is a shortcut key which is the equivalent of
     ;; pressing `<leader> m`
     dotspacemacs-major-mode-leader-key ","
     ;; The command key used for Evil commands (ex-commands) and
     ;; Emacs commands (M-x).
     ;; By default the command key is `:' so ex-commands are executed like in Vim
     ;; with `:' and Emacs commands are executed with `<leader> :'.
     dotspacemacs-command-key ":"
     ;; Guide-key delay in seconds. The Guide-key is the popup buffer listing
     ;; the commands bound to the current keystrokes.
     dotspacemacs-guide-key-delay 0.4
     ;; If non nil a progress bar is displayed when spacemacs is loading. This
     ;; may increase the boot time on some systems and emacs builds, set it to
     ;; nil ;; to boost the loading time.
     dotspacemacs-loading-progress-bar t
     ;; If non nil the frame is fullscreen when Emacs starts up.
     ;; (Emacs 24.4+ only)
     dotspacemacs-fullscreen-at-startup nil
     ;; If non nil `spacemacs/toggle-fullscreen' will not use native fullscreen.
     ;; Use to disable fullscreen animations in OSX."
     dotspacemacs-fullscreen-use-non-native nil
     ;; If non nil the frame is maximized when Emacs starts up.
     ;; Takes effect only if `dotspacemacs-fullscreen-at-startup' is nil.
     ;; (Emacs 24.4+ only)
     dotspacemacs-maximized-at-startup nil
     ;; A value from the range (0..100), in increasing opacity, which describes
     ;; the transparency level of a frame when it's active or selected.
     ;; Transparency can be toggled through `toggle-transparency'.
     dotspacemacs-active-transparency 90
     ;; A value from the range (0..100), in increasing opacity, which describes
     ;; the transparency level of a frame when it's inactive or deselected.
     ;; Transparency can be toggled through `toggle-transparency'.
     dotspacemacs-inactive-transparency 90
     ;; If non nil unicode symbols are displayed in the mode line.
     dotspacemacs-mode-line-unicode-symbols t
     ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth
     ;; scrolling overrides the default behavior of Emacs which recenters theme   ;; point when it reaches the top or bottom of the screen.
     dotspacemacs-smooth-scrolling t
     ;; If non-nil smartparens-strict-mode will be enabled in programming modes.
     dotspacemacs-smartparens-strict-mode nil
     ;; If non nil advises quit functions to keep server open when quitting.
     dotspacemacs-persistent-server nil
     ;; The default package repository used if no explicit repository has been
     ;; specified with an installed package.
     ;; Not used for now.
     dotspacemacs-default-package-repository nil)
    ;; User initialization goes here
    )

(defun dotspacemacs/config ()
  "This is were you can ultimately override default Spacemacs configuration.
This function is called at the very end of Spacemacs initialization."
  ;; Turn on relative linums by default
  (global-linum-mode)
  (linum-relative-toggle)

  (global-flycheck-mode)
  (setq x-select-enable-clipboard t)

  ;; Make helm open in split in the window
  (setq helm-split-window-in-side-p t)

  ;; Turn on rainbow-delimiters for prog modes
  (add-hook 'prog-mode-hook (lambda () (rainbow-delimiters-mode)))

  ;; Follow symlinks
  (setq vc-follow-symlinks t)

  ;; CSS offset
  (setq css-indent-offset 2)

  ;; Company Mode
  (define-key company-active-map (kbd "C-j") 'company-select-next)
  (define-key company-active-map (kbd "C-k") 'company-select-previous)

  ;; js2-mode config (needs to be moved into usr/config layer)
  (eval-after-load 'js2-mode
    '(progn
       ;; Set default js2 settings
       (setq-default js2-enter-indents-newline nil)
       (setq-default js2-bounce-indent-p t)
       (setq-default js2-global-externs '("module" "require" "jQuery" "$" "_" "buster" "sinon" "assert" "refute" "setTimeout" "clearTimeout" "setInterval" "clearInterval" "location" "__dirname" "console" "JSON" "process" "setImmediate" "exports" "enum" "it" "describe"))

       ;; Let Flycheck handle errors until js2 mode supports ES6
       (setq-default js2-show-parse-errors nil)
       (setq-default js2-strict-missing-semi-warning nil)
       (setq-default js2-strict-trailing-comma-warning t)

       (setq-default js-indent-level 2)
       (setq-default js2-strict-inconsistent-return-warning nil)
       (setq-default js2-include-node-externs t)
       (setq-default js2-include-jslint-globals t)
       (setq-default js2-basic-offset 2)

       (add-hook 'js2-mode-hook
                 (lambda ()
                   ;; Electric indent hates bouncies
                   (electric-indent-mode -1)))))
)

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-ispell-requires 4)
 '(ahs-case-fold-search nil)
 '(ahs-default-range (quote ahs-range-whole-buffer))
 '(ahs-idle-interval 0.25)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil)
 '(paradox-automatically-star t)
 '(paradox-github-token t)
 '(ring-bell-function (quote ignore) t)
 '(safe-local-variable-values (quote ((indent-tabs-mode 1)))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:foreground "#DCDCCC" :background "#3F3F3F"))))
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
